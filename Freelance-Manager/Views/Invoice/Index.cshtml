@model List<AllInvoicesVM>

@{
    ViewData["Title"] = "Invoices";
}

<div class="min-h-screen p-6 space-y-6">
    <!-- Summary Box -->
    <div class="bg-white rounded-xl shadow p-4 w-64">
        <div class="flex items-center justify-between w-full">
            <h2 class="text-sm text-gray-500 font-medium">Total Invoices</h2>
            <div class="w-6 h-6 rounded-full bg-black text-white text-xs flex items-center justify-center">
                @Model.Count
            </div>
        </div>

        <p class="text-3xl font-semibold text-black mt-1">
            $@ViewBag.TotalAmount
        </p>
        <div class="h-2 mt-3 bg-gray-200 rounded-full">
            @{
                int progress = @Model.Count != 0 ? (int)(((double)@ViewBag.Paid / @Model.Count) * 100) : 0;
            }
            <div class="bg-black h-2 rounded-full transition-all duration-300 ease-in-out" style="width:@progress%;"></div>
        </div>
    </div>

    <!-- Invoices Header -->
    <div class="flex flex-col md:flex-row justify-between items-start sm:items-center gap-4 mb-6">
        @* <div>
            <h1 class="text-2xl sm:text-3xl font-bold">Invoices</h1>
            <p class="text-gray-500 text-sm sm:text-base">
                Manage your invoices and payments – @Model.Count invoices remaining
            </p>
        </div> *@

        <div class=" mb-5 px-4 sm:px-6 lg:px-2">
            <h1 class="text-3xl sm:text-4xl lg:text-5xl font-extrabold text-gray-800 pb-2">Invoices</h1>
            <h3 class="text-lg sm:text-xl text-gray-600">Manage your invoices and payments – @Model.Count invoices remaining</h3>
        </div>


        <div class="flex items-center gap-3">
            <div class="relative">
                <!-- Dropdown menu -->
                <div class="flex space-x-4">
                    <div class="relative dropdown">
                        <button class="dropdown-btn px-4 py-2 border rounded-md space-x-2 shadow-sm bg-white text-black flex justify-between items-center w-40 cursor-pointer">
                            All Currencies<i class="fa-solid fa-angle-down"></i>
                        </button>
                        <div class="dropdown-menu absolute left-0 mt-2 w-40 bg-white border rounded-md shadow-lg hidden z-40">
                            <a class="block px-4 py-2 hover:bg-gray-100 cursor-pointer">All</a>
                            <a class="block px-4 py-2 hover:bg-gray-100 cursor-pointer">USD</a>
                            <a class="block px-4 py-2 hover:bg-gray-100 cursor-pointer">EUR</a>
                            <a class="block px-4 py-2 hover:bg-gray-100 cursor-pointer">GBP</a>
                            <a class="block px-4 py-2 hover:bg-gray-100 cursor-pointer">EGP</a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Add Button -->
            <button id="openModal"
                    class="bg-black text-white px-4 py-2 rounded-md flex items-center justify-center space-x-2 shadow-sm hover:bg-gray-800 transition w-full md:w-auto">
                <span class="text-lg">+</span>
                <span>Add Invoice</span>
            </button>
        </div>
        
    </div>


    <!-- Warning Banner -->
    @if (ViewBag.OverdueCount != 0)
    {
        <div class="bg-yellow-50 text-yellow-800 text-sm px-4 py-2 rounded-md border border-yellow-300 w-full max-w">
            ⚠️ @ViewBag.OverdueCount invoice is overdue
        </div>
    }

    <!-- Invoices Grid -->
    <div class="viewFilter">
    <div class=" grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        @foreach (var invoice in Model)
        {
            <div class="bg-white shadow-sm rounded-lg p-4 relative border border-gray-300">
                <!-- Header -->
                <div class="flex justify-between items-start mb-2">
                    <div class="flex items-center space-x-3">
                        <h2 class="text-lg font-semibold">@invoice.Name</h2>
                        <span class="bg-@invoice.StatusColor text-white text-xs px-2 py-1 rounded-full">@invoice.Status</span>
                    </div>
                    <div class="relative">
                        <button class="text-gray-500 hover:text-black font-bold menu-btn">⋮</button>
                        <div class="hidden absolute right-0 mt-1 w-32 bg-white border rounded-lg shadow-md menu-dropdown z-10">
                            <button data-id="@invoice.Id" class="edit-btn flex items-center px-3 py-2 hover:bg-gray-100 w-full text-black text-sm">
                                <img src="~/Image/people-svgrepo-com.svg" alt="Edit" class="w-4 h-4 mr-2" />
                                Edit
                            </button>
                            <button class="flex items-center text-red-600 px-3 py-2 hover:bg-red-100 w-full text-sm delete-btn" data-id="@invoice.Id">
                                <img src="~/Image/trash-alt-svgrepo-com.svg" alt="Delete" class="w-4 h-4 mr-2" />
                                Delete
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Invoice Info -->
                <div class="flex items-center space-x-2 text-sm text-gray-500 mb-3">
                    <img src="~/Image/company-svgrepo-com.svg" class="w-4 h-4 " />
                    <span>@invoice.ClientName</span>
                </div>

                <div class="flex items-center justify-between">
                    <div class="text-lg text-black">@invoice.CurrencyName @invoice.Amount</div>
                    <div class="text-sm text-gray-600">@invoice.Hours hours  *  @invoice.CurrencyName @invoice.HourlyRate/hr</div>
                </div>

                <div class="h-2 bg-gray-200 rounded-full mb-4">
                    <div class="w-full h-full bg-@invoice.StatusColor rounded-full"></div>
                </div>

                <div class="grid grid-cols-2 text-sm text-black gap-4 pt-2 bg-gray-100 mt-2 p-4 rounded-md">
                    <!-- Due Date -->
                    <div class="flex items-center space-x-2">

                        <img src="~/Image/calendar-svgrepo-com.svg" class="w-4 h-4" />
                        <div class="flex flex-col items-center space-x-2">
                            <span class="text-gray-600">Due Date:</span> <span> @invoice.DueDate.ToString("dd MMM yyyy")</span>
                        </div>
                    </div>

                    <!-- Created Date -->
                    <div class="flex items-center space-x-2">
                        
                            <svg class="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" stroke-width="2"
                                 viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                      d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                        <div class="flex flex-col items-center space-x-2">
                            <span class="text-gray-600">Created:</span> <span>@invoice.InvoiceDate.ToString("dd MMM yyyy")</span>
                        </div>
                    </div>
                </div>


                <div class="flex space-x-4 pt-4 mt-1">
                    @* <!-- Download Button --> *@
                    @* <button class="flex flex-1 items-center justify-center gap-2 border border-gray-300 text-gray-700 rounded-md py-2 text-sm hover:bg-gray-100 shadow-sm transition"> *@
                    @*     <img src="~/Image/arrow-down-to-bracket-svgrepo-com.svg" class="w-4 h-4" alt="Download" /> *@
                    @*     <span>Download</span> *@
                    @* </button> *@

                    @* <!-- Send Button --> *@
                    @* <button class="flex flex-1 items-center justify-center gap-2 bg-indigo-600 text-white rounded-md py-2 text-sm hover:bg-gray-800 shadow-sm transition"> *@
                    @*     <img src="~/Image/share-1-svgrepo-com.svg" class="w-4 h-4" alt="Send" /> *@
                    @*     <span>Send</span> *@
                    @* </button> *@
                </div>

            </div>
        }

    </div>
    </div>
    
</div>

<div id="modal-container"></div>



<!-- Scripts -->
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Toggle dropdown
        document.querySelectorAll(".menu-btn").forEach(button => {
            button.addEventListener("click", function (e) {
                e.stopPropagation();
                let dropdown = this.nextElementSibling;
                dropdown.classList.toggle("hidden");
            });
        });

        // Delete confirmation
        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", function () {
                let id = this.getAttribute("data-id");
                if (confirm("Are you sure you want to delete this Client?")) {
                    window.location.href = "/Invoice/Delete?id=" + id;
                }
            });
        });

        // Close dropdown when clicking outside
        document.addEventListener("click", function (event) {
            document.querySelectorAll(".menu-dropdown").forEach(menu => {
                if (!menu.contains(event.target) && !menu.previousElementSibling.contains(event.target)) {
                    menu.classList.add("hidden");
                }
            });
        });
    });

         $("#openModal").click(function (e) {
        e.preventDefault();
        $.get('/Invoice/New', function (data) {
            $("#modal-container").html(data);
            $("#modal").removeClass("hidden");

            

            $('body').css('overflow', 'hidden');
        }).fail(function (xhr) {
            console.error("Error Loading Modal:", xhr.responseText);
        });
    });

    $(document).on("click", "#closeModal", function () {
        $("#modal").addClass("hidden");
        $('body').css('overflow', 'auto');
    });

        $(document).on("click", ".edit-btn", function (e) {
        e.preventDefault();
        var id = this.getAttribute("data-id");

       

        $.get('/Invoice/Edit/' + id, function (data) {
            $("#modal-container").html(data);
            $("#modal").removeClass("hidden");

            console.log(data)

            $('body').css('overflow', 'hidden');
        }).fail(function (xhr) {
            console.error("Error loading edit modal:", xhr.responseText);
        });
    });

    @* ajax Filter *@
     function updateProjectsList(statusFilter) {
        $.ajax({
            url: '@Url.Action("Index", "Invoice")',
            type: 'GET',
            data: { statusFilter: statusFilter },
            success: function (data) {
                $(".viewFilter").html($(data).find(".viewFilter").html());
            },
            error: function (xhr, status, error) {
                console.error("Error fetching filtered Invoices:", error);
            }
        });
    }
</script>

<!-- Fillter --->
<script>
    $(document).ready(function () {
        @* show and hide dropdown menu *@
        $(".dropdown-btn").on("click", function () {
            $(this).next(".dropdown-menu").toggleClass("hidden");
        });

        @* on selected Currency *@
        $(".dropdown-menu a").on("click", function () {
            var selectedCurrency = $(this).text().trim();
            $(".dropdown-btn").html(selectedCurrency + ' <i class="fa-solid fa-angle-down"></i>');
            $(".dropdown-menu").addClass("hidden");
            updateProjectsList(selectedCurrency);
        });

        @* close dropdown menu on ckick *@
        $(document).on("click", function (e) {
            if (!$(e.target).closest('.dropdown').length) {
                $(".dropdown-menu").addClass("hidden");
            }
        });
    });
</script>










