@model List<AllClientsVM>

@{
    ViewData["Title"] = "Clients";
}

<div class="max-w-7xl mx-auto p-6">
    <!-- Page Header -->
    <div class="flex flex-col md:flex-row justify-between items-start sm:items-center gap-4 mb-6">
        @* <div>
            <h1 class="text-2xl sm:text-3xl font-bold">Clients</h1>
            <p class="text-gray-500 text-sm sm:text-base">
                Manage your client relationships - @Model.Count clients remaining
            </p>
        </div> *@
        <div class=" mb-5 px-4 sm:px-6 lg:px-2">
            <h1 class="text-3xl sm:text-4xl lg:text-5xl font-extrabold text-gray-800 pb-2">Clients</h1>
            <h3 class="text-lg sm:text-xl text-gray-600">Manage your client relationships - @Model.Count clients remaining</h3>
        </div>

        <button id="openModal"
        class="bg-black text-white px-4 py-2 rounded-md flex items-center justify-center space-x-2 shadow-sm hover:bg-gray-800 transition w-full md:w-auto">
            <span class="text-lg">+</span>
            <span>Add Client</span>
        </button>


    </div>


    <!-- Clients Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        @foreach (var client in Model)
        {
            <div class="bg-white shadow-sm rounded-lg p-4 relative border border-gray-300">
                <!-- Header -->
                <div class="flex justify-between items-start mb-2">
                    <div class="flex items-center space-x-3">
                        <h2 class="text-lg font-semibold">@client.Name</h2>
                        <span class="bg-black text-white text-xs px-2 py-1 rounded-full">@client.Status</span>
                    </div>
                    <div class="relative">
                        <button class="text-gray-500 hover:text-black font-bold menu-btn">⋮</button>
                        <div class="hidden absolute right-0 mt-1 w-32 bg-white border rounded-lg shadow-md menu-dropdown z-10">
                            <button data-id="@client.Id" class="edit-btn w-full flex items-center px-3 py-2 hover:bg-gray-100 text-black text-sm">
                                <img src="~/Image/people-svgrepo-com.svg" alt="Edit" class="w-4 h-4 mr-2" />
                                Edit Client
                            </button>
                            <button class="flex items-center text-red-600 px-3 py-2 hover:bg-red-100 w-full text-sm delete-btn" data-id="@client.Id">
                                <img src="~/Image/trash-alt-svgrepo-com.svg" alt="Delete" class="w-4 h-4 mr-2" />
                                Delete
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Client Info -->
                <div class="text-sm text-gray-600 space-y-2">
                    <div class="flex justify-start gap-3">
                        <p class="flex items-center w-1/2 overflow-hidden whitespace-nowrap text-ellipsis">
                            <img src="~/Image/mail-svgrepo-com.svg" class="w-4 h-4 mr-2" />
                            @client.Email
                        </p>
                        <p class="flex items-center w-1/2 overflow-hidden whitespace-nowrap text-ellipsis">
                            <img src="~/Image/address-location-map-svgrepo-com.svg" class="w-4 h-4 mr-2" />
                            @client.Address
                        </p>
                    </div>
                    <div class="flex justify-start gap-3">
                        <p class="flex items-center w-1/2 overflow-hidden whitespace-nowrap text-ellipsis">
                            <img src="~/Image/phone-svgrepo-com.svg" class="w-4 h-4 mr-2" />
                            @client.ContactPerson
                        </p>
                        <p class="flex items-center w-1/2 overflow-hidden whitespace-nowrap text-ellipsis">
                            <img src="~/Image/calendar-svgrepo-com.svg" class="w-4 h-4 mr-2" />
                            @client.FirstProjectDate?.ToString("dd MMM yyyy")

                        </p>
                    </div>
                </div>


                <!-- Progress -->
                @{
                    int progress = client.TasksCount != 0 ? (int)(((double)client.CompletedTasks / client.TasksCount) * 100) : 0;
                }

                <div class="mt-3 rounded-lg p-3 border border-gray-100 bg-gray-50">
                    <div class="flex justify-between">
                        <p class="text-black text-sm">Project Progress</p>
                        <p class="text-black text-sm">@client.CompletedTasks/@client.TasksCount Tasks</p>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-2 mt-1">
                        <div class="bg-green-600 h-2 rounded-full transition-all duration-300 ease-in-out" style="width:@progress%;"></div>
                    </div>
                    <div class="flex justify-between text-black mt-1">
                        <p class="text-xs">@client.InProgressTasks In Progress</p>
                        <p class="text-xs">@client.CompletedTasks Completed</p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div id="modal-container"></div>

<!-- Scripts -->
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Toggle dropdown
        document.querySelectorAll(".menu-btn").forEach(button => {
            button.addEventListener("click", function (e) {
                e.stopPropagation();
                let dropdown = this.nextElementSibling;
                dropdown.classList.toggle("hidden");
            });
        });

        // Delete confirmation
        document.querySelectorAll(".delete-btn").forEach(button => {
            button.addEventListener("click", function () {
                let id = this.getAttribute("data-id");
                if (confirm("Are you sure you want to delete this Client?")) {
                    window.location.href = "/Clients/Delete?id=" + id;
                }
            });
        });

        // Close dropdown when clicking outside
        document.addEventListener("click", function (event) {
            document.querySelectorAll(".menu-dropdown").forEach(menu => {
                if (!menu.contains(event.target) && !menu.previousElementSibling.contains(event.target)) {
                    menu.classList.add("hidden");
                }
            });
        });
    });

         $("#openModal").click(function (e) {
        e.preventDefault();
        $.get('/Clients/New', function (data) {
            $("#modal-container").html(data);
            $("#modal").removeClass("hidden");

            $('body').css('overflow', 'hidden');
        }).fail(function (xhr) {
            console.error("Error Loading Modal:", xhr.responseText);
        });
    });

    $(document).on("click", "#closeModal", function () {
        $("#modal").addClass("hidden");
        $('body').css('overflow', 'auto');
    });

        $(document).on("click", ".edit-btn", function (e) {
        e.preventDefault();
        var id = $(this).data("id");

        $.get('/Clients/Edit/' + id, function (data) {
            $("#modal-container").html(data);
            $("#modal").removeClass("hidden");
            $('body').css('overflow', 'hidden');
        }).fail(function (xhr) {
            console.error("Error loading edit modal:", xhr.responseText);
        });
    });

</script>

